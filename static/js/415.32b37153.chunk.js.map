{"version":3,"file":"static/js/415.32b37153.chunk.js","mappings":"gMAEaA,E,QAAaC,EAAAA,IAAH,8H,SCevB,EAde,WACX,OACI,SAACD,EAAD,WACI,SAAC,KAAD,CACIE,YAAY,UACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAIxB,C,sHCZYC,EAAWN,EAAAA,EAAAA,GAAH,sYAeRO,GAAYP,EAAAA,EAAAA,GAAOQ,EAAAA,KAAPR,CAAH,gGAMTS,EAAWT,EAAAA,EAAAA,IAAH,qHAORU,EAAaV,EAAAA,EAAAA,IAAH,6DAKVW,EAASX,EAAAA,EAAAA,IAAH,oHAONY,EAAYZ,EAAAA,EAAAA,IAAH,wJAQTa,EAAQb,EAAAA,EAAAA,GAAH,6CAILc,EAAOd,EAAAA,EAAAA,EAAH,oEAKJe,EAASf,EAAAA,EAAAA,IAAH,uU,mBC9BnB,EA1BkB,SAAC,GAAe,IAAbgB,EAAY,EAAZA,MAEXC,GAAWC,EAAAA,EAAAA,MAETC,EAAuDH,EAAvDG,GAAIC,EAAmDJ,EAAnDI,MAAOC,EAA4CL,EAA5CK,YAAaC,EAA+BN,EAA/BM,aAAcC,EAAiBP,EAAjBO,aAE9C,OACI,SAACjB,EAAD,WACY,SAACC,EAAD,CAAWiB,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMT,GAA/C,UACI,UAACR,EAAD,YACI,SAACC,EAAD,WACI,SAACC,EAAD,CACIgB,IAAKN,EAAW,0CAAsCA,GAAgBO,EACtEC,IAAKT,OAEb,UAACR,EAAD,YACI,SAACC,EAAD,UAAQO,KACR,SAACN,EAAD,UAAOQ,EAAaQ,MAAM,EAAG,SAEjC,SAACf,EAAD,UAASQ,EAAaQ,QAAQ,WAZnCZ,EAiBtB,EC1BYa,EAAOhC,EAAAA,EAAAA,GAAH,0LCcjB,EAbkB,SAAC,GAAgB,IAAdiC,EAAa,EAAbA,OAEjB,OACE,SAACD,EAAD,UACKC,GAAUA,EAAOC,KAAI,SAAClB,GAAD,OAClB,SAAC,EAAD,CAEIA,MAAOA,GADFA,EAAMG,GAFG,KAO/B,C,sICPKgB,EAASnC,EAAAA,EAAAA,OAAH,siBAuDZ,UAjCa,WAEX,OAA4CoC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,GAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAkCN,EAAAA,EAAAA,WAAS,GAA3C,eAAOO,EAAP,KAAkBC,EAAlB,MAEEC,EAAAA,EAAAA,YAAU,WACND,GAAa,IAEfE,EAAAA,EAAAA,IAAkBP,GACfQ,MAAK,SAAAC,GAAUV,GAAkB,SAAAW,GAAS,wBAASA,IAAT,OAAuBD,EAAKE,SAA5B,GAAwC,IAClFC,OAAM,SAAAV,GAAK,OAAIC,EAASD,EAAb,IACXW,SAAQ,WAAOR,GAAa,EAAO,GACvC,GAAE,CAACL,IAMN,OACE,iCACE,SAAC,IAAD,WACI,2BAAO,mBAEVI,IAAa,SAAC,IAAD,IACbF,IAAS,yBAAMA,EAAMY,UACrBhB,IAAkB,SAAC,IAAD,CAAWJ,OAAQI,IACpCA,IAAmBM,IAAc,SAACR,EAAD,CAAQmB,QAZ5B,WACbd,EAAQD,EAAO,EAClB,EAUoC,SAA6B,gBAGrE,C,wJC5DD,IAAMgB,EAAW,gCACXC,EAAU,mCAIHV,EAAoB,WAAe,IAAdP,EAAa,uDAAN,EACrC,OAAOkB,MAAM,GAAD,OAAIF,EAAJ,sCAA0CC,EAA1C,iBAA0DjB,IAC7DQ,MAAK,SAAAW,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAM,gCACnC,GACZ,EAIYC,EAAY,SAACC,GACtB,OAAOR,MAAM,GAAD,OAAIF,EAAJ,8BAAkCU,EAAlC,oBAAyDT,EAAzD,+CACPT,MAAK,SAAAW,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAM,gCACnC,GACR,EAIYG,EAAe,SAAC/C,GACzB,OAAOsC,MAAM,GAAD,OAAIF,EAAJ,iBAAqBpC,EAArB,oBAAmCqC,EAAnC,oBACPT,MAAK,SAAAW,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAM,gCACnC,GACR,EAIYI,EAAe,SAAChD,GACzB,OAAOsC,MAAM,GAAD,OAAIF,EAAJ,iBAAqBpC,EAArB,4BAA2CqC,IAClDT,MAAK,SAAAW,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAM,gCACnC,GACR,EAIYK,EAAkB,SAACjD,GAC5B,OAAOsC,MAAM,GAAD,OAAIF,EAAJ,iBAAqBpC,EAArB,4BAA2CqC,IACtDT,MAAK,SAAAW,GACE,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAM,gCACnC,GACR,C","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LoaderWrap = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 60px;\n`;","import { RotatingLines } from \"react-loader-spinner\";\nimport { LoaderWrap } from \"./Loader.styled\";\n\nconst Loader = () => {\n    return (\n        <LoaderWrap>\n            <RotatingLines\n                strokeColor=\"#a30101\"\n                strokeWidth=\"5\"\n                animationDuration=\"0.75\"\n                width=\"96\"\n                visible={true}\n            />\n        </LoaderWrap>\n    )\n};\n\nexport default Loader;","import styled from '@emotion/styled';\nimport { Link } from \"react-router-dom\";\n\nexport const ListItem = styled.li`\n    border-radius: 8px;\n    overflow: hidden;\n    background-color: #fff;\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n        0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n        transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover {\n        transform: scale(1.03);\n        cursor: zoom-in;\n    }\n`;\n\nexport const MovieLink = styled(Link)`\n    display: inline-block;\n    height: 100%;\n    color: #000000;    \n`;\n\nexport const CardWrap = styled.div`\n    position: relative;\n    display: flex;\n    height: 100%;\n    flex-direction: column;\n`;\n\nexport const PosterWrap = styled.div`\n    width: 100%;\n    height: 100%;\n`;\n\nexport const Poster = styled.img`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;   \n`;\n\nexport const TitleWrap = styled.div`\n        height: 84px;\n        padding: 16px 12px;\n        display: flex;\n        flex-direction: column;\n        gap: 8px;\n`;\n\nexport const Title = styled.h3`\n    display: block;\n`;\n\nexport const Info = styled.p`\n    font-weight: 500;\n    color: #585757;\n`;\n\nexport const Rating = styled.div`\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    width: 32px;\n    height: 32px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #fff;\n    border: #a30101 3px solid;\n    border-radius: 50%;\n    font-size: 12px;\n    font-weight: 700;\n`;","import { useLocation } from \"react-router-dom\";\nimport { CardWrap, ListItem, MovieLink, Poster, PosterWrap, Info, Title, TitleWrap, Rating } from './MovieCard.styled';\nimport DefaultImage from '../../images/movieImg.jpg';\n\nconst MovieCard = ({ movie }) => {\n\n    const location = useLocation();\n    \n    const { id, title, poster_path, release_date, vote_average } = movie;\n\n    return (\n        <ListItem key={id}>\n                    <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                        <CardWrap>\n                            <PosterWrap>\n                                <Poster\n                                    src={poster_path ? `https://image.tmdb.org/t/p/w500/${poster_path}` : DefaultImage}\n                                    alt={title} /> \n                            </PosterWrap>\n                            <TitleWrap>\n                                <Title>{title}</Title>\n                                <Info>{release_date.slice(0, 4)}</Info>\n                            </TitleWrap>\n                            <Rating>{vote_average.toFixed(1)}</Rating>\n                        </CardWrap>\n                    </MovieLink>\n                </ListItem>\n    )\n};\n\nexport default MovieCard;","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n    --min: 30ch;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(min(100%, var(--min)), 1fr));\n    gap: 1rem;\n    margin-bottom: 40px;\n`;","import MovieCard from \"components/MovieCard/MovieCard\";\nimport { List } from \"./MovieList.styled\";\n\nconst MovieList = ({ movies }) => {    \n    \n    return (        \n      <List>\n          {movies && movies.map((movie) => (\n              <MovieCard\n                  key={movie.id}\n                  movie={movie} />  \n        ))}\n      </List>\n  );\n};\n\nexport default MovieList;","import { useState, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport styled from \"@emotion/styled\";\nimport { getTrendingMovies } from \"services/api\";\nimport MovieList from \"components/MovieList/MovieList\";\nimport Loader from \"components/Loader/Loader\";\n\nconst Button = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-left: auto;\n    margin-right: auto;\n    width: 160px;\n    height: 36px;\n    background-color: #a30101;\n    color: #ffffff;\n    border: none;\n    border-radius: 8px;\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n        0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n        transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover {\n        background-color: #530202;\n    }\n`;\n\nconst Home = () => {\n  \n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        setIsLoading(true);\n\n      getTrendingMovies(page)\n        .then(data => { setTrendingMovies(prevState => ([...prevState, ...data.results])) })\n        .catch(error => setError(error))\n        .finally(() => {setIsLoading(false)})\n    }, [page])\n  \n  const onLoadMore = () => {\n        setPage(page + 1)\n    };\n  \n  return (\n    <>\n      <Helmet>\n          <title>Movie Finder</title>\n      </Helmet>\n      {isLoading && <Loader />}\n      {error && <div>{error.message}</div>}\n      {trendingMovies && <MovieList movies={trendingMovies} />}\n      {(trendingMovies && !isLoading) && <Button onClick={onLoadMore}>LOAD MORE</Button>}\n    </>\n  ) \n};\n\nexport default Home;","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '1b503a470f760c92c3c57decdfe60ef0';\n\n//список найпопулярніших фільмів на сьогодні\n\nexport const getTrendingMovies = (page = 1) => {\n    return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}`)\n            .then(response => {\n                if (response.ok) {\n                    return response.json()\n                }\n\n                return Promise.reject(new Error('Oops... Something went wrong'))\n            })\n};\n\n//пошук фільму за ключовим словом\n\nexport const getMovies = (searchQuery) => {\n    return fetch(`${BASE_URL}search/movie?query=${searchQuery}&api_key=${API_KEY}&include_adult=false&language=en-US&page=1`)\n        .then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n\n            return Promise.reject(new Error('Oops... Something went wrong'))\n        })\n};\n\n//запит повної інформації про фільм\n\nexport const getMovieInfo = (id) => {\n    return fetch(`${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`)\n        .then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n\n            return Promise.reject(new Error('Oops... Something went wrong'))\n        })\n};\n\n//запит інформації про акторський склад\n\nexport const getMovieCast = (id) => {\n    return fetch(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`)\n        .then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n\n            return Promise.reject(new Error('Oops... Something went wrong'))\n        })\n};\n\n//запит оглядів\n\nexport const getMovieReviews = (id) => {\n    return fetch(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`)\n    .then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n\n            return Promise.reject(new Error('Oops... Something went wrong'))\n        })\n};"],"names":["LoaderWrap","styled","strokeColor","strokeWidth","animationDuration","width","visible","ListItem","MovieLink","Link","CardWrap","PosterWrap","Poster","TitleWrap","Title","Info","Rating","movie","location","useLocation","id","title","poster_path","release_date","vote_average","to","state","from","src","DefaultImage","alt","slice","toFixed","List","movies","map","Button","useState","trendingMovies","setTrendingMovies","page","setPage","error","setError","isLoading","setIsLoading","useEffect","getTrendingMovies","then","data","prevState","results","catch","finally","message","onClick","BASE_URL","API_KEY","fetch","response","ok","json","Promise","reject","Error","getMovies","searchQuery","getMovieInfo","getMovieCast","getMovieReviews"],"sourceRoot":""}