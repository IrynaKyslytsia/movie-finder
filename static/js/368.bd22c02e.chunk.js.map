{"version":3,"file":"static/js/368.bd22c02e.chunk.js","mappings":"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","sources":["components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieCard = styled.div`\n    --min: 30ch;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(min(100%, var(--min)), 1fr));\n    gap: 2rem;\n    margin-top: 40px;\n    margin-bottom: 40px;\n    padding: 40px;\n    color: #FFFFFF;\n`;\n\nexport const PosterWrap = styled.div`\n    width: 100%;\n    height: 100%;    \n`;\n\nexport const Poster = styled.img`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;  \n    border-radius: 8px;\n`;\n\nexport const Info = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 24px;\n`;\n\nexport const Title = styled.h2`\n    font-size: 40px;\n`;\n\nexport const Text = styled.p`\n    font-size: 20px;\n`;\n\nexport const Subtitle = styled.h3`\n    font-size: 24px;\n    margin-bottom: 12px;\n`;\n\n//MovieDetails styles\n\nexport const BackLink = styled(Link)`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 160px;\n    height: 36px;\n    background-color: #a30101;\n    color: #ffffff;\n    /* padding: 8px 24px; */\n    border-radius: 8px;\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n        0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n        transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover {\n        background-color: #530202;\n    }\n`;\n\nexport const AdditionalInfo = styled.ul`\n    display: flex;\n    gap: 40px;\n    margin-bottom: 40px;\n`;\n\nexport const InfoLink = styled(Link)`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #a30101;\n    color: #ffffff;\n    width: 160px;\n    height: 36px;\n    border-radius: 8px;\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n        0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n        transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover {\n        background-color: #530202;\n    }\n`;","import { MovieCard, Poster, Info, Title, Text, Subtitle, PosterWrap } from \"./MovieInfo.styled\";\nimport DefaultImage from '../../images/movieImg.jpg';\n\nconst MovieInfo = ({ movie }) => {\n    const { genres, title, overview, runtime, vote_average, poster_path, release_date } = movie;\n    \n    function getTimeFromMins(mins) {\n        let hours = Math.trunc(mins/60);\n        let minutes = mins % 60;\n        return hours + 'h. ' + minutes + 'm.';\n    };\n\n    return (\n        <MovieCard>\n            <PosterWrap>\n                <Poster\n                    src={poster_path ? `https://image.tmdb.org/t/p/w500/${poster_path}` : DefaultImage}\n                    alt={title} />\n            </PosterWrap>\n            <Info>\n                <Title>{`${title} (${release_date.slice(0, 4)})`}</Title>\n                <Text style={{color: \"#FFFFFF80\"}}>\n                    {genres.map(({ name }) => name).join(\", \")}\n                </Text>\n                <Text>{getTimeFromMins(runtime)}</Text>\n                <Text>User Score: <b style={{color: \"#a30101\", fontSize: \"26px\"}}>{(vote_average * 10).toFixed(0)} %</b></Text>\n                <div>\n                    <Subtitle>Overview</Subtitle>\n                    <Text>{overview}</Text>\n                </div>\n            </Info>\n        </MovieCard>\n    )\n};\n\nexport default MovieInfo;","import MovieInfo from 'components/MovieInfo/MovieInfo';\nimport { AdditionalInfo, BackLink, InfoLink } from 'components/MovieInfo/MovieInfo.styled';\nimport { Suspense, useRef, useState, useEffect } from 'react';\nimport { FaArrowLeft } from \"react-icons/fa\";\n\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieInfo } from 'services/api';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getMovieInfo(movieId)\n      .then(data => {\n        setMovieInfo(data)\n      })\n      .catch(error => setError(error))\n      .finally(() => { setIsLoading(false) })\n  }, [movieId])\n\n  return (\n    <>\n      <BackLink to={backLinkLocationRef.current}><FaArrowLeft width=\"24\" height=\"24\" style={{marginRight: \"6px\"}} />GO BACK</BackLink>\n      {isLoading && <div>Loading...</div>}\n      {error && <div>{error.message}</div>}\n      {movieInfo && <MovieInfo movie={movieInfo} />}\n      <AdditionalInfo>\n        <li>\n          <InfoLink to=\"cast\">CAST</InfoLink>\n        </li>\n        <li>\n          <InfoLink to=\"reviews\">REVIEWS</InfoLink>\n        </li>\n      </AdditionalInfo>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '1b503a470f760c92c3c57decdfe60ef0';\n\n//список найпопулярніших фільмів на сьогодні\n\nexport const getTrendingMovies = (page = 1) => {\n    return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${page}`)\n            .then(response => {\n                if (response.ok) {\n                    return response.json()\n                }\n\n                return Promise.reject(new Error('Oops... Something went wrong'))\n            })\n};\n\n//пошук фільму за ключовим словом\n\nexport const getMovies = (searchQuery) => {\n    return fetch(`${BASE_URL}search/movie?query=${searchQuery}&api_key=${API_KEY}&include_adult=false&language=en-US&page=1`)\n        .then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n\n            return Promise.reject(new Error('Oops... Something went wrong'))\n        })\n};\n\n//запит повної інформації про фільм\n\nexport const getMovieInfo = (id) => {\n    return fetch(`${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`)\n        .then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n\n            return Promise.reject(new Error('Oops... Something went wrong'))\n        })\n};\n\n//запит інформації про акторський склад\n\nexport const getMovieCast = (id) => {\n    return fetch(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`)\n        .then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n\n            return Promise.reject(new Error('Oops... Something went wrong'))\n        })\n};\n\n//запит оглядів\n\nexport const getMovieReviews = (id) => {\n    return fetch(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`)\n    .then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n\n            return Promise.reject(new Error('Oops... Something went wrong'))\n        })\n};"],"names":["MovieCard","styled","PosterWrap","Poster","Info","Title","Text","Subtitle","BackLink","Link","AdditionalInfo","InfoLink","mins","movie","genres","title","overview","runtime","vote_average","poster_path","release_date","src","DefaultImage","alt","slice","style","color","map","name","join","Math","trunc","fontSize","toFixed","useState","movieInfo","setMovieInfo","error","setError","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","getMovieInfo","then","data","catch","finally","to","current","width","height","marginRight","message","Suspense","fallback","BASE_URL","API_KEY","getTrendingMovies","page","fetch","response","ok","json","Promise","reject","Error","getMovies","searchQuery","id","getMovieCast","getMovieReviews"],"sourceRoot":""}