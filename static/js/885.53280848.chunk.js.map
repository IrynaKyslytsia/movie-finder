{"version":3,"file":"static/js/885.53280848.chunk.js","mappings":"8OAEaA,EAAaC,EAAAA,EAAAA,GAAH,yFAMVC,EAAWD,EAAAA,EAAAA,GAAH,0HAORE,EAAaF,EAAAA,EAAAA,EAAH,mHAOVG,EAAUH,EAAAA,EAAAA,EAAH,qEAKPI,EAAUJ,EAAAA,EAAAA,IAAH,qE,SCvBZK,EAAcC,EAAQ,IAAtBD,UAqCR,EAnCgB,WACd,OAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAEQC,EAAYT,IAAZS,QAcR,OAZAC,EAAAA,EAAAA,YAAU,WACRF,GAAa,IAEbG,EAAAA,EAAAA,IAAgBF,GACbG,MAAK,SAAAC,GACNT,EAAgBS,EAAKC,QACpB,IACAC,OAAM,SAAAV,GAAK,OAAIC,EAASD,EAAb,IACXW,SAAQ,WAAQR,GAAa,EAAQ,GAEzC,GAAE,CAACC,KAGF,gCACGF,IAAa,wCACbF,IAAS,yBAAMA,EAAMY,UACrBd,EAAae,OAAS,GAAI,SAACxB,EAAD,UACxBS,EAAagB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAChB,UAAC1B,EAAD,YACE,UAACC,EAAD,sBAAqBwB,MACrB,SAACvB,EAAD,UAAUwB,MAFGF,EADC,OAMH,SAACrB,EAAD,uDAGtB,C,uJCvCD,IAAMwB,EAAW,gCACXC,EAAU,mCAIHC,EAAoB,WAC7B,OAAOC,MAAM,GAAD,OAAIH,EAAJ,sCAA0CC,IAC7CZ,MAAK,SAAAe,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAM,gCACnC,GACZ,EAIYC,EAAY,SAACC,GACtB,OAAOR,MAAM,GAAD,OAAIH,EAAJ,8BAAkCW,EAAlC,oBAAyDV,EAAzD,+CACPZ,MAAK,SAAAe,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAM,gCACnC,GACR,EAIYG,EAAe,SAACf,GACzB,OAAOM,MAAM,GAAD,OAAIH,EAAJ,iBAAqBH,EAArB,oBAAmCI,EAAnC,oBACPZ,MAAK,SAAAe,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAM,gCACnC,GACR,EAIYI,EAAe,SAAChB,GACzB,OAAOM,MAAM,GAAD,OAAIH,EAAJ,iBAAqBH,EAArB,4BAA2CI,IAClDZ,MAAK,SAAAe,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAM,gCACnC,GACR,EAIYrB,EAAkB,SAACS,GAC5B,OAAOM,MAAM,GAAD,OAAIH,EAAJ,iBAAqBH,EAArB,4BAA2CI,IACtDZ,MAAK,SAAAe,GACE,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAM,gCACnC,GACR,C","sources":["components/Rewievs/Reviews.styled.jsx","components/Rewievs/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewList = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n`;\n\nexport const ListItem = styled.li`\n    padding: 16px;\n    color: #FFFFFF;\n    background-color: #787777;\n    border-radius: 8px;\n`;\n\nexport const AuthorName = styled.p`\n    font-size: 18px;\n    font-weight: 500;\n    margin-bottom: 8px;\n    color: #a30101;\n`;\n\nexport const Content = styled.p`\n    font-size: 16px;\n    line-height: 1.5;\n`;\n\nexport const Message = styled.div`\n    font-size: 24px;\n    font-weight: 500;\n`;","import { useEffect, useState } from 'react';\nimport { getMovieReviews } from 'services/api';\nimport { AuthorName, Content, ListItem, ReviewList, Message } from './Reviews.styled';\n\nconst { useParams } = require('react-router-dom');\n\nconst Reviews = () => {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getMovieReviews(movieId)\n      .then(data => {\n      setMovieReviews(data.results)\n      })\n      .catch(error => setError(error))\n      .finally(() => { setIsLoading(false) })\n  \n  }, [movieId])\n\n  return (\n    <>\n      {isLoading && <div>Loading...</div>}\n      {error && <div>{error.message}</div>}\n      {movieReviews.length > 0 ? <ReviewList>\n        {movieReviews.map(({ id, author, content }) => (\n          <ListItem key={id}>\n            <AuthorName>Author: {author}</AuthorName>\n            <Content>{content}</Content>\n          </ListItem>\n        ))}\n      </ReviewList> : (<Message>Sorry, there is no information here...</Message>)}\n    </>\n  );\n};\n\nexport default Reviews;","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '1b503a470f760c92c3c57decdfe60ef0';\n\n//список найпопулярніших фільмів на сьогодні\n\nexport const getTrendingMovies = () => {\n    return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n            .then(response => {\n                if (response.ok) {\n                    return response.json()\n                }\n\n                return Promise.reject(new Error('Oops... Something went wrong'))\n            })\n};\n\n//пошук фільму за ключовим словом\n\nexport const getMovies = (searchQuery) => {\n    return fetch(`${BASE_URL}search/movie?query=${searchQuery}&api_key=${API_KEY}&include_adult=false&language=en-US&page=1`)\n        .then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n\n            return Promise.reject(new Error('Oops... Something went wrong'))\n        })\n};\n\n//запит повної інформації про фільм\n\nexport const getMovieInfo = (id) => {\n    return fetch(`${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`)\n        .then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n\n            return Promise.reject(new Error('Oops... Something went wrong'))\n        })\n};\n\n//запит інформації про акторський склад\n\nexport const getMovieCast = (id) => {\n    return fetch(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`)\n        .then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n\n            return Promise.reject(new Error('Oops... Something went wrong'))\n        })\n};\n\n//запит оглядів\n\nexport const getMovieReviews = (id) => {\n    return fetch(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`)\n    .then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n\n            return Promise.reject(new Error('Oops... Something went wrong'))\n        })\n};"],"names":["ReviewList","styled","ListItem","AuthorName","Content","Message","useParams","require","useState","movieReviews","setMovieReviews","error","setError","isLoading","setIsLoading","movieId","useEffect","getMovieReviews","then","data","results","catch","finally","message","length","map","id","author","content","BASE_URL","API_KEY","getTrendingMovies","fetch","response","ok","json","Promise","reject","Error","getMovies","searchQuery","getMovieInfo","getMovieCast"],"sourceRoot":""}