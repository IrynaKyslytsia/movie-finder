{"version":3,"file":"static/js/415.00cfe7cb.chunk.js","mappings":"+NAGaA,EAAOC,EAAAA,EAAAA,GAAH,gKAOJC,EAAWD,EAAAA,EAAAA,GAAH,yWAcRE,GAAYF,EAAAA,EAAAA,GAAOG,EAAAA,KAAPH,CAAH,gGAMTI,EAAWJ,EAAAA,EAAAA,IAAH,4FAMRK,EAAaL,EAAAA,EAAAA,IAAH,6DAKVM,EAASN,EAAAA,EAAAA,IAAH,oHAONO,EAAYP,EAAAA,EAAAA,IAAH,wJAQTQ,EAAQR,EAAAA,EAAAA,GAAH,6CAILS,EAAcT,EAAAA,EAAAA,EAAH,oE,SC9BxB,EA1BkB,SAAC,GAAgB,IAAdU,EAAa,EAAbA,OACXC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACb,EAAD,UACOW,GAAUA,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,aAA3B,OAClB,SAAChB,EAAD,WACI,SAACC,EAAD,CAAWgB,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAA/C,UACI,UAACP,EAAD,YACI,SAACC,EAAD,WACI,SAACC,EAAD,CACIe,IAAKL,EAAW,0CAAsCA,G,s2OACtDM,IAAKP,OAEb,UAACR,EAAD,YACI,SAACC,EAAD,UAAQO,KACR,SAACN,EAAD,UAAcQ,EAAaM,MAAM,EAAG,cAVrCT,EADG,KAmBjC,C,8ECAD,UAxBa,WAEX,OAA4CU,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAWA,OATEC,EAAAA,EAAAA,YAAU,WACND,GAAa,IAEfE,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GAAUR,EAAkBQ,EAAKC,QAAU,IAChDC,OAAM,SAAAT,GAAK,OAAIC,EAASD,EAAb,IACXU,SAAQ,WAAOP,GAAa,EAAO,GACvC,GAAE,KAGH,gCACGD,IAAa,wCACbF,IAAS,yBAAMA,EAAMW,UACrBb,IAAkB,SAAC,IAAD,CAAWf,OAAQe,MAG3C,C,uJC1BD,IAAMc,EAAW,gCACXC,EAAU,mCAIHR,EAAoB,WAC7B,OAAOS,MAAM,GAAD,OAAIF,EAAJ,sCAA0CC,IAC7CP,MAAK,SAAAS,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAM,gCACnC,GACZ,EAIYC,EAAY,SAACC,GACtB,OAAOR,MAAM,GAAD,OAAIF,EAAJ,8BAAkCU,EAAlC,oBAAyDT,EAAzD,+CACPP,MAAK,SAAAS,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAM,gCACnC,GACR,EAIYG,EAAe,SAACpC,GACzB,OAAO2B,MAAM,GAAD,OAAIF,EAAJ,iBAAqBzB,EAArB,oBAAmC0B,EAAnC,oBACPP,MAAK,SAAAS,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAM,gCACnC,GACR,EAIYI,EAAe,SAACrC,GACzB,OAAO2B,MAAM,GAAD,OAAIF,EAAJ,iBAAqBzB,EAArB,4BAA2C0B,IAClDP,MAAK,SAAAS,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAM,gCACnC,GACR,EAIYK,EAAkB,SAACtC,GAC5B,OAAO2B,MAAM,GAAD,OAAIF,EAAJ,iBAAqBzB,EAArB,4BAA2C0B,IACtDP,MAAK,SAAAS,GACE,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAM,gCACnC,GACR,C","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from \"react-router-dom\";\n\nexport const List = styled.ul`\n    --min: 30ch;\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(min(100%, var(--min)), 1fr));\n    gap: 1rem;\n`;\n\nexport const ListItem = styled.li`\n    border-radius: 8px;\n    overflow: hidden;\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n        0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n        transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover {\n        transform: scale(1.03);\n        cursor: zoom-in;\n    }\n`;\n\nexport const MovieLink = styled(Link)`\n    display: inline-block;\n    height: 100%;\n    color: #000000;    \n`;\n\nexport const CardWrap = styled.div`\n    display: flex;\n    height: 100%;\n    flex-direction: column;\n`;\n\nexport const PosterWrap = styled.div`\n    width: 100%;\n    height: 100%;\n`;\n\nexport const Poster = styled.img`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;   \n`;\n\nexport const TitleWrap = styled.div`\n        height: 84px;\n        padding: 16px 12px;\n        display: flex;\n        flex-direction: column;\n        gap: 8px;\n`;\n\nexport const Title = styled.h3`\n    display: block;\n`;\n\nexport const ReleaseDate = styled.p`\n    font-weight: 500;\n    color: #585757;\n`;","import { useLocation } from \"react-router-dom\";\nimport { CardWrap, List, ListItem, MovieLink, Poster, PosterWrap, ReleaseDate, Title, TitleWrap } from \"./MovieList.styled\";\nimport DefaultImage from '../../images/movieImg.jpg';\n\nconst MovieList = ({ movies }) => {    \n    const location = useLocation();\n\n    return (        \n      <List>\n            {movies && movies.map(({ id, title, poster_path, release_date }) => (\n                <ListItem key={id}>\n                    <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                        <CardWrap>\n                            <PosterWrap>\n                                <Poster\n                                    src={poster_path ? `https://image.tmdb.org/t/p/w500/${poster_path}` : DefaultImage}\n                                    alt={title} /> \n                            </PosterWrap>\n                            <TitleWrap>\n                                <Title>{title}</Title>\n                                <ReleaseDate>{release_date.slice(0, 4)}</ReleaseDate>\n                            </TitleWrap>\n                        </CardWrap>\n                    </MovieLink>\n                </ListItem>\n        ))}\n      </List>\n  );\n};\n\nexport default MovieList;","import { useState, useEffect } from \"react\";\nimport MovieList from \"components/MovieList/MovieList\";\nimport { getTrendingMovies } from \"services/api\";\n\nconst Home = () => {\n  \n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        setIsLoading(true);\n\n      getTrendingMovies()\n        .then(data => { setTrendingMovies(data.results) })\n        .catch(error => setError(error))\n        .finally(() => {setIsLoading(false)})\n    }, [])\n  \n  return (\n    <>\n      {isLoading && <div>Loading...</div>}\n      {error && <div>{error.message}</div>}\n      {trendingMovies && <MovieList movies={trendingMovies} />}\n    </>\n  ) \n};\n\nexport default Home;","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '1b503a470f760c92c3c57decdfe60ef0';\n\n//список найпопулярніших фільмів на сьогодні\n\nexport const getTrendingMovies = () => {\n    return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n            .then(response => {\n                if (response.ok) {\n                    return response.json()\n                }\n\n                return Promise.reject(new Error('Oops... Something went wrong'))\n            })\n};\n\n//пошук фільму за ключовим словом\n\nexport const getMovies = (searchQuery) => {\n    return fetch(`${BASE_URL}search/movie?query=${searchQuery}&api_key=${API_KEY}&include_adult=false&language=en-US&page=1`)\n        .then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n\n            return Promise.reject(new Error('Oops... Something went wrong'))\n        })\n};\n\n//запит повної інформації про фільм\n\nexport const getMovieInfo = (id) => {\n    return fetch(`${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`)\n        .then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n\n            return Promise.reject(new Error('Oops... Something went wrong'))\n        })\n};\n\n//запит інформації про акторський склад\n\nexport const getMovieCast = (id) => {\n    return fetch(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`)\n        .then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n\n            return Promise.reject(new Error('Oops... Something went wrong'))\n        })\n};\n\n//запит оглядів\n\nexport const getMovieReviews = (id) => {\n    return fetch(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`)\n    .then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n\n            return Promise.reject(new Error('Oops... Something went wrong'))\n        })\n};"],"names":["List","styled","ListItem","MovieLink","Link","CardWrap","PosterWrap","Poster","TitleWrap","Title","ReleaseDate","movies","location","useLocation","map","id","title","poster_path","release_date","to","state","from","src","alt","slice","useState","trendingMovies","setTrendingMovies","error","setError","isLoading","setIsLoading","useEffect","getTrendingMovies","then","data","results","catch","finally","message","BASE_URL","API_KEY","fetch","response","ok","json","Promise","reject","Error","getMovies","searchQuery","getMovieInfo","getMovieCast","getMovieReviews"],"sourceRoot":""}